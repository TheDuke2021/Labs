//ВВП, Лабораторная работа номер 24, Бараев Дамир 201-725
//Программа написана на языке C++

#include <iostream>
#include <string>

using namespace std;

char* locale = setlocale(LC_ALL, "rus");

void task_1();
void task_2();
void task_3();
void task_4();
void task_5();
void task_6();
void task_7();


int main()
{
	//Каждый task - это отдельное задание в лабораторной работе
	//Можно закомментировать нужные строчки, чтобы проверить 
	//работоспособность отдельно взятого задания
	task_1();
	task_2();
	task_3();
	task_4();
	task_5();
	task_6();
	task_7();
}

void task_1()
{

	//1. Дана строка, состоящая из русских слов, разделенных пробелами (одним или несколькими). 
	//	Найти количество слов в строке.

	//Предполагается, что строка содержит хотя бы одно слово
	string S;
	cout << "Введите строку: " << endl;
	getline(cin, S);
	int count = 1;
	int n = S.length();
	for (int i = 0; i < n; i++) {
		if (S[i] == ' ')
			count++;
	}

	cout << "Количество слов: " << count << endl;

}




void task_2()
{
	//2. Дана строка, состоящая из русских слов, разделенных пробелами (одним или несколькими). 
	//	Найти длину самого короткого слова.


	string S;
	cout << "Введите строку: " << endl;
	getline(cin, S);
	int n = S.length();
	int min = 0;
	int localMin;
	int i;
	for (i = 0; i < n; i++) {
		if (S[i] == ' ') {
			i++;
			break;
		}
		min++;
	}
	while (i < n) {
		localMin = 0;
		for (; i < n; i++) {
			if (S[i] == ' ') {
				i++;
				break;
			}
			localMin++;
		}
		if (localMin < min)
			min = localMin;
	}

	cout << "Длина самого короткого слова: " << min << endl;
}

void task_3()
{
	//3. Дана строка, состоящая из русских слов, набранных заглавными буквами и разделенных пробелами 
	//	(одним или несколькими). Преобразовать каждое слово в строке, заменив в нем все последующие вхождения 
	//	его первой буквы на символ «.» (точка). Например, слово «МИНИМУМ» надо преобразовать в «МИНИ.У.». 
	//	Количество пробелов между словами не изменять

	string S;
	cout << "Введите строку: " << endl;
	getline(cin, S);
	int n = S.length();
	for (int i = 1; i < n; i++)
		if (S[i] == S[0])
			S[i] = '.';

	cout << "Изменённая строка: " << S << endl;

}

void task_4()
{
	//4. Дана строка-предложение на русском языке. Подсчитать количество содержащихся в строке гласных букв.

	string S;
	cout << "Введите строку: " << endl;
	getline(cin, S);
	int n = S.length();
	int count = 0;
	char ar[] = {'А', 'Е', 'Ё', 'И', 'О', 'У', 'Ы', 'Э', 'Ю', 'Я', 'а', 'е', 'ё', 'и', 'о', 'у', 'ы', 'э', 'ю', 'я', };
	size_t arN = sizeof(ar) / sizeof(ar[0]);
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < arN; j++) {
			if (S[i] == ar[j])
				count++;
		}
	}

	cout << "Количество гласных букв: " << count << endl;

}

void task_5()
{
	//5. Дана строка, содержащая полное имя файла, то есть имя диска, список каталогов (путь), собственно имя и 
	//	расширение. Выделить из этой строки имя файла (без расширения)

	string S;
	cout << "Введите строку: " << endl;
	getline(cin, S);
	int n = S.length();
	int start;
	int end;
	int i;
	for (i = n - 1; i >= 0; i--) {
		if (S[i] == '.')
			break;
	}
	end = i;
	for (; i >= 0; i--) {
		if (S[i] == '/')
			break;
	}
	start = i+1;
	for (i = start; i < end; i++)
		cout << S[i];
	cout << endl;
}

void task_6()
{
	//6. Дана строка, содержащая полное имя файла. Выделить из этой строки название последнего каталога 
	//	(без символов «\»). Если файл содержится в корневом каталоге, то вывести символ «\».

	string S;
	cout << "Введите строку: " << endl;
	getline(cin, S);
	int n = S.length();
	int start;
	int end;
	int i;
	for (i = n - 1; i >= 0; i--) {
		if (S[i] == '/')
			break;
	}
	end = i;
	i--;
	for (; i >= 0; i--) {
		if (S[i] == '/')
			break;
	}
	start = i+1;
	if (start == end)
		cout << "/";
	else
		for (i = start; i < end; i++)
			cout << S[i];
	cout << endl;

}

void task_7()
{
	//7. Дана строка-предложение. Зашифровать ее, поместив вначале все символы, расположенные на четных позициях строки, 
	//	а затем, в обратном, все символы, расположенные на нечетных позициях (например, строка «Программа» превратится 
	//	в «ргамамроП»).

	string S;
	cout << "Введите строку: " << endl;
	getline(cin, S);
	string S1 = S;
	int n = S.length();
	int index = n;
	for (int i = 0; i < n; i += 2) {
		S1[--index] = S[i];
	}
	int i = n-1;
	if (i % 2 == 0)
		i--;
	for (; i > 0; i -= 2) {
		S1[--index] = S[i];
	}
	
	cout << "Зашифрованная строка: " << S1 << endl;

}